<?xml version="1.0"?>
<implementation>

    <files>L_TradfriGW.lua</files>

    <startup>init</startup>

    <actionList>
        <action>
            <serviceId>urn:upnp-org:serviceId:tradfri-gw1</serviceId>
            <name>Reboot</name>
            <run>
                Reboot(lul_device)
            </run>
        </action>
        <action>
            <serviceId>urn:upnp-org:serviceId:tradfri-gw1</serviceId>
            <name>FactoryReset</name>
            <run>
                FactoryReset(lul_device)
            </run>
        </action>
        <action>
            <serviceId>urn:upnp-org:serviceId:tradfri-gw1</serviceId>
            <name>SetCommissioningMode</name>
            <run>
                SetCommissioningMode(lul_device, lul_settings.CommissioningTimeout)
            </run>
        </action>
		<action>
			<serviceId>urn:upnp-org:serviceId:tradfri-gw1</serviceId>
			<name>SetObserveMode</name>
			<run>
			    SetObserveMode(lul_device, lul_settings.newObserveMode)
			</run>
		</action>
		<action>
			<serviceId>urn:upnp-org:serviceId:tradfri-gw1</serviceId>
			<name>SetDebugMode</name>
			<run>
			    SetDebugMode(lul_device, lul_settings.newDebugMode)
			</run>
		</action>
		<action>
			<serviceId>urn:upnp-org:serviceId:tradfri-gw1</serviceId>
			<name>SetDeviceName</name>
			<job>
                local tradfri_id = luup.devices[lul_device].id
                if tradfri_id then
			      SetDeviceName(lul_device, lul_settings.newName)
                  tradfriUpdateDeviceName(tradfri_id)
                end
			</job>
		</action>
        <action>
            <serviceId>urn:upnp-org:serviceId:SwitchPower1</serviceId>
            <name>SetTarget</name>
            <run>
                SwitchPower_SetTarget(lul_device,lul_settings.newTargetValue)
            </run>
        </action>
        <action>
            <serviceId>urn:upnp-org:serviceId:Dimming1</serviceId>
            <name>SetLoadLevelTarget</name>
            <run>
                Dimming_SetLoadLevelTarget(lul_device,lul_settings.newLoadlevelTarget)
            </run>
        </action>
		<action>
		  <serviceId>urn:micasaverde-com:serviceId:HaDevice1</serviceId>
		  <name>ToggleState</name>
		  <run>
              HaDevice_ToggleState(lul_device)
		  </run>
		</action>
        <action>
            <serviceId>urn:micasaverde-com:serviceId:Color1</serviceId>
            <name>SetColorRGB</name>
            <run>
                Color_SetColorRGB(lul_device,lul_settings.newColorRGBTarget)
            </run>
        </action>
        <action>
            <serviceId>urn:micasaverde-com:serviceId:Color1</serviceId>
            <name>SetColor</name>
            <run>
                Color_SetColor(lul_device,lul_settings.newColorTarget)
            </run>
        </action>
        <action>
            <serviceId>urn:micasaverde-com:serviceId:SecuritySensor1</serviceId>
            <name>SetArmed</name>
            <run>
                SecuritySensor_SetArmed(lul_device,lul_settings.newArmedValue)
            </run>
        </action>
    </actionList>
</implementation>
